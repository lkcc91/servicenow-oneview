(function executeRule(current, previous /*null when async*/) {
	
	if (current == null) // to prevent null pointer exceptions.
		return; 
	// Execute this rule only if this incident is generated by Arrow for OneView alerts.
	// All incidents created by Arrow for OneView alerts container field 'correlation_id' starting with '/rest/alerts/'
	//if(current.correlation_id.startsWith("/rest/alerts/")) {
		var arrow_ip = "16.214.194.25";
		var midserver = "servicenow-midserver"
		
		gs.info("The current record number field is: " + current.getValue("number"));
		try { 
			var r = new sn_ws.RESTMessageV2('HPE OneView Arrow Login', 'post');
			//var r = new sn_ws.RESTMessageV2();
			
			r.setHttpMethod("post");
			r.setEndpoint("http://" + arrow_ip +":3000/arrow/v1/login-sessions");
			r.setMIDServer(midserver);
			
			
			gs.info("After Arrow Login" + r.getEndpoint());
			//override authentication profile 
			//authentication type ='basic'/ 'oauth2'
			//r.setAuthentication(authentication type, profile name);
			gs.info("before execute");
			var response = r.execute();
			gs.info("after execute");
			var resBody = response.getBody();
			gs.info("resBody: " + resBody);
			
			
			var json = new global.JSON(); 
			gs.info("after JSONParser");
			var responseBody =  json.decode(resBody.toString());
			var httpStatus = response.getStatusCode();
			gs.info("HTTP Status code: " + httpStatus);
			gs.info("HTTP Response Body: " + responseBody);
			if (httpStatus == 200) {
				gs.info("console token: " + responseBody.token);
				gs.info("Token is "+ responseBody.token);
				
				var post = new sn_ws.RESTMessageV2('HPE OneView Alert', 'post');
				//var post = new sn_ws.RESTMessageV2();
				post.setHttpMethod('post');
				post.setEndpoint("http://" + arrow_ip +":3000/arrow/v1/incident");
				gs.info("After Arrow Incident Closed" + post.getEndpoint() + post.getRequestHeader('Accept'));
				
				post.setRequestHeader("auth", responseBody.token);
				
				//var reqBody = '{"incidentID" : "' + current.number + '", "alerturi": "' + current.correlation_id + '", "token": "' + responseBody.token + '"}';
				var reqBody = '{"incidentID" : "' + current.number + '", "alerturi": "' + current.location + '", "token": "' + responseBody.token + '"}';
				
				post.setRequestBody(reqBody);
				post.setMIDServer(midserver);
				
				//override authentication profile 
				//authentication type ='basic'/ 'oauth2'
				//r.setAuthentication(authentication type, profile name);
				gs.info("before incident close rest api" + post.getRequestBody());
				var response1 = post.execute();
				gs.info("After incident close rest api");
				var responseBody1 = response1.getBody();
				var httpStatus1 = response1.getStatusCode();
				// Log a message as info
				gs.info("responseBody1 " + responseBody1);
				gs.info("httpStatus: " + httpStatus1);
			}
		}
		catch(ex) {
			 var message = ex.getMessage();
			gs.info("Exception " + message);
		}
		
	//}
})(current, previous);
